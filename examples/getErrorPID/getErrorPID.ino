// Пример получения ошибки центрирования бампера:          // * Строки со звёздочкой являются необязательными.
                                                           //
#include <Wire.h>                                          // * Подключаем библиотеку для работы с аппаратной шиной I2C.
#include <iarduino_I2C_Bumper.h>                           //   Подключаем библиотеку для работы с бампером I2C-flash.
iarduino_I2C_Bumper bum(0x09);                             //   Объявляем объект bum для работы с функциями и методами библиотеки iarduino_I2C_Bumper, указывая адрес модуля на шине I2C.
                                                           //   Если объявить объект без указания адреса (iarduino_I2C_Bumper bum;), то адрес будет найден автоматически.
void setup(){                                              //
    delay(500);                                            // * Ждём завершение переходных процессов связанных с подачей питания.
    Serial.begin(9600);                                    //   Инициируем передачу данных в монитор последовательного порта на скорости 9600 бит/сек.
    while(!Serial){;}                                      // * Ждём завершения инициализации шины UART.
    bum.begin();                                           //   Инициируем работу с бампером.
}                                                          //
                                                           //
void loop(){                                               //
//   Получаем текущую ошибку центрирования линии:          //
     float i = bum.getErrPID();                            //   Функция getErrPID() возвращает ошибку от 0 до ±4.5, где 0 - линия по центру, ±4.0 - линия на крайнем датчике, ±4.5 - линия потеряна.
                                                           //   Отрицательные значения означают о смещении линии влево от центра бампера, положительные о смещении вправо.
     Serial.print("Ошибка центрирования: ");               //   Выводим текст.
     Serial.println(i);                                    //   Выводим полученную ошибку центрирования.
     delay(200);                                           // * Задержка позволяет медленнее заполнять монитор последовательного порта.
}                                                          //
                                                           //
/*   Ошибка центрирования позволяет управлять моторами     //
 *   используя ПИД регулятор.                              //
 *   Обращение к функции getErrPID() с параметром          //
 *   позволяет маневрировать (поворачивать) на перекрёстке.//
 */                                                        //