// Пример автоматической калибровки бампера:               // * Строки со звёздочкой являются необязательными.
                                                           //
#include <Wire.h>                                          // * Подключаем библиотеку для работы с аппаратной шиной I2C.
#include <iarduino_I2C_Bumper.h>                           //   Подключаем библиотеку для работы с бампером I2C-flash.
iarduino_I2C_Bumper bum(0x09);                             //   Объявляем объект bum для работы с функциями и методами библиотеки iarduino_I2C_Bumper, указывая адрес модуля на шине I2C.
                                                           //   Если объявить объект без указания адреса (iarduino_I2C_Bumper bum;), то адрес будет найден автоматически.
void setup(){                                              //
    delay(500);                                            // * Ждём завершение переходных процессов связанных с подачей питания.
    Serial.begin(9600);                                    //   Инициируем передачу данных в монитор последовательного порта на скорости 9600 бит/сек.
    while(!Serial){;}                                      // * Ждём завершения инициализации шины UART.
    bum.begin();                                           //   Инициируем работу с бампером.
    Serial.print("Выполняем калибровку ... ");             //   Выводим текст.
    if( bum.setCalibrationAuto() ){                        //   Выполняем калибровку и проверяем её результат.
        Serial.println("Ok!");                             //   Выводим "Ok!" если функция setCalibrationAuto() вернула true.
    }else{                                                 //   Иначе.
        Serial.println("Error!");                          //   Выводим "Error!" если функция setCalibrationAuto() вернула false.
    }                                                      //
//  Выводим информацию о типе линии на трассе:             // * 
    Serial.print("Сейчас бампер откалиброван для трассы ");// * Выводим текст.
    switch( bum.getLineType() ){                           // * Получаем тип линии для которой откалиброван датчик.
        case BUM_LINE_BLACK:                               // * Если датчик откалиброван для тёмной линии на светлом фоне.
        Serial.println("с тёмной линией на светлом фоне"); // * Выводим текст 
        break;                                             // * 
        case BUM_LINE_WHITE:                               // * Если датчик откалиброван для светлой линии на тёмном фоне.
        Serial.println("со светлой линией на тёмном фоне");// * Выводим текст 
        break;                                             // * 
    }                                                      // * 
}                                                          //
                                                           //
void loop(){}                                              //
                                                           //
/*  Параметр функции setCalibrationAuto():
 *  БЕЗ ПАРАМЕТРА  - Калибровка выполняется с изменением типа линии на трассе, как при нажатии кнопки «калибровка» на бампере.
 *  BUM_LINE_WHITE - Калибровка выполняется для трассы с тёмной линией на светлом фоне.  Пример: bum.setCalibrationAuto(BUM_LINE_WHITE);
 *  BUM_LINE_BLACK - Калибровка выполняется для трассы со светлой линией на тёмном фоне. Пример: bum.setCalibrationAuto(BUM_LINE_BLACK);
 *  
 *  ПРИМЕЧАНИЕ:
 *  В данном примере калибровка выполняется обращением к функции setCalibrationAuto() без параметра, значит тип линии будет меняться с каждым новым запуском данного скетча.
 *  Во время калибровки, один (любой) или несколько датчиков модуля должны быть над линией, а остальные датчики должны быть над фоном.
 */ 